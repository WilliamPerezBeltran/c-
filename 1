# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"


#react native config 

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# add these lines: to npm without sudo 
export PATH="$PATH:$HOME/npm/bin"
export NODE_PATH="$NODE_PATH:$HOME/npm/lib/node_modules"

export NVM_DIR="/home/user/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion



#some alias to git start to prefix git
alias gita="git add ."
alias gits="git status"
alias push="git push origin master"
alias pull="git pull origin master"
alias gitl="git log"
alias gitb="git branch"
alias gitc="git commit -m"
alias master="git checkout master"

#some alias to ruby on rails, start with prefix ra
alias ras="rails server"
alias rac="rails console"
alias fus="sudo fuser -k 3000/tcp"
alias migrate="rails db:migrate"

#Show git current branch
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "


#react-native alias
alias fur="sudo fuser -k 8081/tcp"
alias a="yarn start"

alias rr="react-native run-android"
alias need="cd android/ && ./gradlew clean && cd .. && watchman watch-del-all && watchman shutdown-server && rm -rf $HOME/.gradle/caches/ && rm -rf node_modules/ && yarn && yarn start"
alias gpa="rm -rf android/app/my-upload-key.keystore  && keytool -genkeypair -v -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000 && mv my-upload-key.keystore android/app && cd android && ./gradlew assembleDebug"

alias gapk="rm -rf android/app/mykeystore.keystore && keytool -genkey -v -keystore mykeystore.keystore -alias mykeyalias -keyalg RSA -keysize 2048 -validity 10000 && mv mykeystore.keystore android/app && cd android && ./gradlew assembleRelease"
alias r="fur && a"

# added by Anaconda3 installer
export PATH="/home/user/anaconda3/bin:$PATH"
conda activate
. /home/user/anaconda3/etc/profile.d/conda.sh


#heroku
alias hp="git push heroku master"
alias hm="heroku run rake db:migrate"
alias hs="heroku run rake db:seed"
alias hc="heroku run rails console"
alias hpid="heroku ps"
alias hpidc="heroku ps:stop run."
alias hl="heroku logs -t"


#instalation requeried for django 

export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS=' -p /usr/bin/python3 '
export PROJECT_HOME=$HOME/Devel
source /usr/local/bin/virtualenvwrapper.sh


#django

alias po="sudo fuser -k 8000/tcp"
alias pt="sudo fuser -k 3000/tcp"
alias djs="python manage.py runserver"
alias djm="python manage.py migrate"
alias djmm="python manage.py makemigrations"
alias djsh="python manage.py shell"
#electron 
alias el="yarn electron-dev"
alias borrar="rm -rf /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3 && rm -rf /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3.save"
alias crear="touch /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3 "

#scrapy
#enviroment variables necessary for the spider to run 

export DJANGO_WEB_DIR=/home/user/Desktop/scrapy_proyect/scraper/web
export SCRAPY_DIR=/home/user/Desktop/scrapy_proyect/scraper/scraper
export OCTOPUS_ENV=development
export PYTHONPATH=/usr/local/lib/python2.7/site-packages


#spider
alias in_spider="ssh octopus@176.58.124.31"

#rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"




export rails_react_recipe_DATABASE_PASSWORD="123456"


#electron-proyecto rfId
alias rmData="rm -rf /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3 && rm -rf /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3.save && touch /home/user/.config/@coreui/coreui-free-react-admin-template/db.sqlite3"
alias inRfid="sudo fuser -k 3000/tcp && yarn electron-dev"



# prettier
alias prettier="npx prettier . --write"


# open urls 
alias open="./open_url_at_once.sh && close"

#close all terminals 
alias close="kill -9 $(pgrep bash)"

# git comand
alias update="git checkout master && git pull origin master"

#react ja 
alias st="npm start"


# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"

# esta fue la unica forma que pude para que me cargara en la terminal rvm, intente con varias pero esta fue la unica forma que me sirvio
source /usr/share/rvm/scripts/rvm

# ruby on rails
alias v="ruby -v && rails -v"

#mis cosas 
alias  pu="gita && gitc 'add file' && push "


#git with github
alias  gitla="git log --graph --oneline --decorate --color --all --abbrev-commit"

#java path 
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
export PATH=$JAVA_HOME/bin:$PATH

export GRADLE_HOME=/opt/gradle/gradle-8.1.1
export PATH=${GRADLE_HOME}/bin:${PATH}

# execute file in java as a function
f() {
	javac "$1" && java "$1"

}

export PATH="/usr/bin:$PATH"




#execute c file in langue as a function
g(){
	local resultado=$((gcc "$1" -o "$1"))
	./$resultado 
}








